////////////////////////////////// 1. Переменные /////////////////////////////////////

///// variable /////
//var name = 'Pavel' //old Использовалась давно. Лучше не использовать. Можно менять названи переменной (name = 'Pasha'). Нужны ''
//const lastName = 'Osipov' //Нельзя менять название переменной. Только для чтения (read only) В приоритете использовать её(!) Нужны  '' //string
//const firstName = 'Pavel'
//let age = 24 //То же самое что и  var, no sovremennoe. Ne nujni '' //number
//const age = 24
//const isProgrammer = true //boolean
//const _private = 'private' //Можно создавать переменные с разными симолвами, например _
//const _ = 'private2' //Можно создавать переменные просто из одного символа
//const $ = 'some value' //Даже просто из $
//const if = 'mkef' //Нельзя, т.к. if используется самим языком
//const withNum5 = '5' //Можно создавать переменные, где присутствует цифра
//const 5withNum = '5' //Но нельзя создавать переменную, которая начинается с цифры

//age = false

//console.log(age) //pozvolyaet chitat' nazvanie peremennoi v console

///// camelCase ///// - Правильно писать второе слово с большой буквы (const firstName, const lastName). Для удобства, чтобы не писать лишний символ (first_name).
// ; - не обязательно ставить, но и вставка не будет ошибкой. Зависит от ситуации.

////////////////////////////////// 2. Мутирование /////////////////////////////////////

//Можно использовать разные кавычки "" и ''. '' - лучше, менее громоздкие. Но в коде должны быть одинаковые кавычки везде
//console.log('Имя человека: ' + firstName + ', а возраст человека: ' + age.toString()) //Объединение. Идут строки + числа. Число можно записать просто age, но внутри скрыто toString. А toString переводит число в текст
//console.log(age) //Число будет писать фиолетовым, как переменная, а в примере выше серым, т.к. идёт трансормация в текст
//Именно toString переводит числовое значение в текст
//alert('Имя человека: ' + firstName + ', а возраст человека: ' + age) //alert будет работать только в браузере, её нет в самом языке
///////alert - выводит окно с нашим кодом
//////h1 - выводит текст
//prompt('Введите фамилию')
//const lastName = prompt('Введите фамилию')
//alert(firstName + ' ' + lastName)


////////////////////////////////// 3. Операторы /////////////////////////////////////
//Числа
//let currentYear = 2021
//const birthYear = 1997

//const age = currentYear - birthYear

//const a = 10
//const b = 5
//let c = 32

//c = c + a
//c = c - a
//c = c * a
//c = c / a
//c += a ///// Это одинаковые записи с примерами выше, только записаны более коротко.
//c -= a
//c *= a
//c /= a

//console.log(a + b)
//console.log(a - b)
//console.log(a * b)
//console.log(a / b)
//console.log(++currentYear) //Мы меняем const у currentYear на let, чтобы можно было менять значение.
//Так же ++ добавляет к нашему значению +1. Если оно стоит перед переменной, то будет добавлять +1 (++currentYear) , если после (currentYear++), то нет, т.к. есть другйо приоритет
//console.log(--currentYear)
//Ситуация у -- такая же как и у ++
//console.log(c)

////////////////////////////////// 4. Типы данных /////////////////////////////////////
const isProgrammer = true
const name = 'Pavel'
const age = 24
let x //Создать const нельзя, т.к. в неё обязательно нужно что-то указывать
console.log(typeof isProgrammer) // В консоле будет отображаться какой это тип данных. (boolean, string, number, undefined, object (это баг), null) - это всё примитивы в языке. Но есть ещё 3.
console.log(typeof name) // Оператор typeof выводит какой у нас тип данных
console.log(typeof age)
console.log(typeof x)
console.log(null)
//// Скрипт всегда подключается внизу под вёрсткой